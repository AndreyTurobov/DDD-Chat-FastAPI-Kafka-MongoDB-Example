[tool.poetry]
name = "fastapi-chat-example"
version = "0.1.0"
description = ""
authors = ["andrei_turobov <forgunn@yandex.ru>"]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.110.0"
uvicorn = "^0.28.1"
motor = "^3.3.2"
uuid7 = "^0.1.0"
punq = "^0.7.0"
pydantic-settings = "^2.2.1"
aiokafka = "^0.10.0"
orjson = "^3.10.1"
websockets = "^12.0"
aiojobs = "^1.2.1"
httpx = "^0.27.0"
setuptools = "^75.3.0"

[tool.poetry.dev-dependencies]
ipython = "^8.22.2"
pytest = "^8.1.1"
pytest-asyncio = "^0.23.6"
Faker = "^24.3.0"
pre-commit = "^3.7.0"
ruff = "^0.4.2"
mypy = "^1.10.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    # Pyflakes
    "F",
    # pycodestyle
    "E",
    # isort
    "I",
    # pep8-naming
    "N",
    # pydocstyle
    "D",
    # pyupgrade
    "UP",
    # flake8-async
    "ASYNC",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-commas
    "COM",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # eradicate
    "ERA",
    # Pylint
    "PL",
]

extend-ignore = [
    "W191",
    "B008",
    "B024",
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D203",
    "D206",
    "D213",
    "D300",
    "E111",
    "E114",
    "E117",
    "N818",
    "COM812",
    "COM819",
]

[tool.ruff.lint.isort.sections]
"fastapi" = [
    "fastapi",
    "starlette",
]

[tool.ruff.lint.isort]
force-sort-within-sections = true
known-third-party = [
    "aiojobs",
    "aiokafka",
    "motor",
    "orjson",
    "punq",
]
known-first-party = [
    "application",
    "domain",
    "infra",
    "logic",
    "settings",
    "tests",
]
section-order = [
    "future",
    "standard-library",
    "fastapi",
    "third-party",
    "first-party",
    "local-folder",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
mypy_path = "app"
exclude = "tests"

# Ensure full coverage
check_untyped_defs = true
disallow_untyped_calls = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true

# Explicit is better than implicit
no_implicit_optional = true

# Restrict dynamic typing
disallow_any_generics = true
disallow_subclassing_any = true
warn_return_any = true

# Know exactly what you're doing
warn_redundant_casts = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true
show_error_codes = true

# It's too difficult for me so far
ignore_missing_imports  = true

plugins = [
    "pydantic.mypy",
]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true